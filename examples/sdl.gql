schema {
  query: PrivateQuery
  mutation: PrivateMutation
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)
"""
scalar JSON

"""

"""
input OrderByObjectInput {
  """

  """
  column: String!

  """

  """
  sort: SortTypeEnum
}

"""
The `DateTime` scalar type represents a DateTime. The DateTime is serialized as an RFC 3339 quoted string
"""
scalar DateTime

"""
Snippet
"""
type Snippet {
  """

  """
  SnippetDrafts(idDraft: UUID, obClause: ClauseObjectInput): [Draft]

  """

  """
  SnippetTopic(idTopic: UUID, obClause: ClauseObjectInput): Topic

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idQuiz: UUID!

  """

  """
  idSnippet: UUID!

  """

  """
  idTopic: UUID!
}

"""

"""
input ClauseObjectInput {
  """

  """
  order: [OrderByObjectInput]

  """

  """
  group: GroupByObjectInput

  """

  """
  pagination: PaginationObjectInput

  """

  """
  select: [SelectObjectInput]

  """

  """
  conditions: [ConditionObjectInput]
}

"""
Answer
"""
type Answer {
  """

  """
  AnswerOptions: [Option]

  """

  """
  dsAnswer: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idAnswer: UUID!

  """

  """
  idOffice: UUID!

  """

  """
  idProject: UUID!

  """

  """
  idQuiz: UUID!

  """

  """
  idReport: UUID!

  """

  """
  idTopic: UUID!
}

"""
Draft
"""
type Draft {
  """

  """
  dsDefault: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idDraft: UUID!

  """

  """
  idOption: NullUUID

  """

  """
  idQuiz: UUID!

  """

  """
  idSnippet: UUID!

  """

  """
  idTopic: UUID!
}

"""

"""
input AdminObjectInput {
  """

  """
  avatar: String
}

"""
A valid universally unique identifier
"""
scalar UUID

"""
Option
"""
type Option {
  """

  """
  dsLabel: String!

  """

  """
  dsOption: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  flComment: Boolean!

  """

  """
  idOption: UUID!

  """

  """
  idTopic: UUID!

  """

  """
  stOption: RecordStatusEnum!
}

"""
Context
"""
type Context {
  """

  """
  ContextAdmin: Admin
}

"""
Goal
"""
type Goal {
  """

  """
  dsGoal: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idGoal: UUID!

  """

  """
  nmGoal: String!
}

"""
Office
"""
type Office {
  """

  """
  OfficeReports(idReport: UUID, obClause: ClauseObjectInput): [Report]

  """

  """
  dsEmail: EmailAddress!

  """

  """
  dsOffice: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idClient: UUID!

  """

  """
  idOffice: UUID!

  """

  """
  nmContact: String!

  """

  """
  nmOffice: String!

  """

  """
  obOffice: JSON

  """

  """
  stOffice: RecordStatusEnum!
}

"""
Private GraphQL Mutations
"""
type PrivateMutation {
  """

  """
  AddAdmin(idRole: UUID!, nmAdmin: String!, obAdmin: AdminObjectInput): Admin

  """

  """
  AddClient(
    nmClient: String!
    dsClient: NullString
    flKeyAccount: Boolean!
    obOffices: [OfficeInput]
  ): Client

  """

  """
  AddFile(
    idFile: UUID!
    idEntity: UUID!
    idRecord: UUID!
    flCompress: Boolean = true
  ): File

  """

  """
  AddGoal(nmGoal: String!, dsGoal: NullString): Goal

  """

  """
  AddOffice(
    idClient: UUID!
    nmOffice: String!
    nmContact: String!
    dsEmail: EmailAddress!
    dsOffice: NullString
  ): Office

  """

  """
  AddProject(
    dsProject: NullString
    obGoals: [UUID]
    idClient: UUID!
    idSegment: UUID!
    nmProject: String!
  ): Project

  """

  """
  AddQuiz(
    idProject: UUID!
    nmQuiz: String!
    dsQuiz: NullString
    obSnippets: [SnippetInput]
  ): Quiz

  """

  """
  AddReport(
    idQuiz: UUID!
    obOffices: [UUID]!
    dtExpiration: DateTime!
  ): [Report]

  """

  """
  AddSection(
    idParent: NullUUID
    nmSection: String!
    dsSection: NullString
  ): Section

  """

  """
  AddSegment(nmSegment: String!, dsSegment: NullString): Segment

  """

  """
  AddTopic(
    obOptions: [OptionInput]
    obSegments: [UUID]
    idSection: UUID!
    idParent: NullUUID
    dsTitle: String!
    dsTopic: NullString
    tpField: FieldTypeEnum!
  ): Topic

  """

  """
  ChangePassword(dsOld: String!, dsNew: String!): Admin

  """

  """
  CopyFile(idFile: UUID!, idEntity: UUID!, idRecord: UUID!): File

  """

  """
  DelAdmin(idAdmin: UUID!): Admin

  """

  """
  DelClient(idClient: UUID!): Client

  """

  """
  DelFile(idFile: UUID!): File

  """

  """
  DelGoal(idGoal: UUID!): Goal

  """

  """
  DelOffice(idOffice: UUID!): Office

  """

  """
  DelProject(idProject: UUID!): Project

  """

  """
  DelQuiz(idQuiz: UUID!): Quiz

  """

  """
  DelReport(idReport: UUID!): Report

  """

  """
  DelSection(idSection: UUID!): Section

  """

  """
  DelSegment(idSegment: UUID!): Segment

  """

  """
  DelTag(idTag: UUID!): [Tag]

  """

  """
  DelTopic(idTopic: UUID!): Topic

  """

  """
  Me: Admin

  """

  """
  MoveFile(idFile: UUID!, idEntity: UUID!, idRecord: UUID!): File

  """

  """
  RenameFile(idFile: UUID!, nmFile: String!): File

  """

  """
  ReplaceFile(
    idNew: UUID!
    nmFile: String!
    flCompress: Boolean = true
    idOld: UUID!
  ): File

  """

  """
  SetAdmin(nmAdmin: String!, obAdmin: AdminObjectInput): Admin

  """

  """
  SetAdminStatus(idAdmin: String!, stAdmin: RecordStatusEnum!): Admin

  """

  """
  SetClient(
    flKeyAccount: Boolean!
    stClient: RecordStatusEnum!
    idClient: UUID!
    nmClient: String!
    dsClient: NullString = "{ false}"
  ): Client

  """

  """
  SetGoal(idGoal: UUID!, nmGoal: String!, dsGoal: NullString = "{ false}"): Goal

  """

  """
  SetOffice(
    nmOffice: String!
    nmContact: String!
    dsEmail: EmailAddress!
    dsOffice: NullString = "{ false}"
    stOffice: RecordStatusEnum!
    idOffice: UUID!
  ): Office

  """

  """
  SetProject(
    idProject: UUID!
    nmProject: String!
    dsProject: NullString = "{ false}"
    stProject: ProjectStatusEnum!
    obGoals: [UUID]
  ): Project

  """

  """
  SetQuiz(
    idQuiz: UUID!
    nmQuiz: String!
    dsQuiz: NullString = "{ false}"
    stQuiz: RecordStatusEnum!
    obSnippets: [SnippetInput]
  ): Quiz

  """

  """
  SetReport(
    idReport: UUID!
    nmReport: String!
    dsReport: NullString = "{ false}"
    stReport: RecordStatusEnum!
    dtExpiration: DateTime!
  ): Report

  """

  """
  SetSection(
    stSection: RecordStatusEnum!
    idSection: UUID!
    idParent: NullUUID = "{00000000-0000-0000-0000-000000000000 false}"
    nmSection: String!
    dsSection: NullString = "{ false}"
  ): Section

  """

  """
  SetSegment(
    idSegment: UUID!
    nmSegment: String!
    dsSegment: NullString = "{ false}"
  ): Segment

  """

  """
  SetTag(idRecord: UUID!, idEntity: UUID!, obTags: [String]): [Tag]

  """

  """
  SetTopic(
    tpField: FieldTypeEnum!
    obOptions: [OptionInput]
    obSegments: [UUID]
    idTopic: UUID!
    idParent: NullUUID
    dsTitle: String!
    dsTopic: NullString = "{ false}"
  ): Topic

  """

  """
  SignOut: Boolean
}

"""

"""
input GroupByObjectInput {
  """

  """
  columns: [String]
}

"""
Topic
"""
type Topic {
  """

  """
  TopicChildren(obClause: ClauseObjectInput, idTopic: UUID): [Topic]

  """

  """
  TopicOptions(idOption: UUID, obClause: ClauseObjectInput): [Option]

  """

  """
  TopicParent(idTopic: UUID, obClause: ClauseObjectInput): [Topic]

  """

  """
  dsTitle: String!

  """

  """
  dsTopic: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  hasChild: Boolean!

  """

  """
  idParent: NullUUID

  """

  """
  idSection: UUID!

  """

  """
  idTopic: UUID!

  """

  """
  obMask: JSON!

  """

  """
  obValidation: JSON!

  """

  """
  tpField: FieldTypeEnum!
}

"""

"""
enum ProjectStatusEnum {
  """

  """
  active

  """

  """
  archived
}

"""

"""
input SelectObjectInput {
  """

  """
  alias: String

  """

  """
  column: String!

  """

  """
  function: AggregateTypeEnum
}

"""
Tag
"""
type Tag {
  """

  """
  cdTag: String!

  """

  """
  dsTag: String!

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idClient: UUID!

  """

  """
  idOffice: UUID!

  """

  """
  idTag: UUID!
}

"""
Quiz
"""
type Quiz {
  """

  """
  QuizReports(idReport: UUID, obClause: ClauseObjectInput): [Report]

  """

  """
  QuizSnippets(idSnippet: UUID, obClause: ClauseObjectInput): [Snippet]

  """

  """
  dsQuiz: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idProject: UUID!

  """

  """
  idQuiz: UUID!

  """

  """
  nmQuiz: String!

  """

  """
  obQuiz: JSON

  """

  """
  stQuiz: RecordStatusEnum!
}

"""
NullDateTime is a nullable DateTime
"""
scalar NullDateTime

"""

"""
input ConditionObjectInput {
  """

  """
  column: String!

  """

  """
  operator: OperatorTypeEnum!

  """

  """
  value: JSON!
}

"""

"""
enum FieldTypeEnum {
  """

  """
  image

  """

  """
  number

  """

  """
  phone

  """

  """
  date

  """

  """
  email

  """

  """
  file

  """

  """
  radio

  """

  """
  range

  """

  """
  boolean

  """

  """
  category

  """

  """
  checkbox

  """

  """
  text

  """

  """
  time
}

"""
File
"""
type File {
  """

  """
  dsMime: String!

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idClient: NullUUID

  """

  """
  idEntity: UUID!

  """

  """
  idFile: UUID!

  """

  """
  idRecord: UUID!

  """

  """
  nbSize: Int!

  """

  """
  nmFile: String!
}

"""

"""
input SnippetInput {
  """

  """
  idTopic: UUID!

  """

  """
  obDrafts: [DraftInput]
}

"""
String is a nullable string
"""
scalar NullString

"""
Private GraphQL Queries
"""
type PrivateQuery {
  """

  """
  Admins(idAdmin: UUID, obClause: ClauseObjectInput): [Admin]

  """

  """
  Clients(idClient: UUID, obClause: ClauseObjectInput): [Client]

  """

  """
  Context: Context

  """

  """
  Entities(idEntity: UUID, obClause: ClauseObjectInput): [Entity]

  """

  """
  Files(
    idRecord: UUID
    idEntity: UUID
    obClause: ClauseObjectInput
    idFile: UUID
  ): [File]

  """

  """
  Goals(idGoal: UUID, obClause: ClauseObjectInput): [Goal]

  """

  """
  Me: Admin

  """

  """
  Projects(idProject: UUID, obClause: ClauseObjectInput): [Project]

  """

  """
  Sections(idSection: UUID, obClause: ClauseObjectInput): [Section]

  """

  """
  Segments(idSegment: UUID, obClause: ClauseObjectInput): [Segment]

  """

  """
  Tags(idTag: UUID, idRecord: UUID): [Tag]

  """

  """
  Token: Boolean
}

"""

"""
input PaginationObjectInput {
  """

  """
  limit: Int!

  """

  """
  offset: Int!
}

"""
Entity
"""
type Entity {
  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idEntity: UUID!

  """

  """
  nmEntity: String!
}

"""
Project
"""
type Project {
  """

  """
  ProjectGoals(obClause: ClauseObjectInput, idGoal: UUID): [Goal]

  """

  """
  ProjectQuizzes(obClause: ClauseObjectInput, idQuiz: UUID): [Quiz]

  """

  """
  ProjectReports(idReport: UUID, obClause: ClauseObjectInput): [Report]

  """

  """
  dsProject: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idClient: UUID!

  """

  """
  idProject: UUID!

  """

  """
  idSegment: UUID!

  """

  """
  nmProject: String!

  """

  """
  obProject: JSON

  """

  """
  stProject: ProjectStatusEnum!
}

"""
Section
"""
type Section {
  """

  """
  SectionChildren(idSection: UUID, obClause: ClauseObjectInput): [Section]

  """

  """
  SectionParent(idSection: UUID, obClause: ClauseObjectInput): [Section]

  """

  """
  SectionTopics(idTopic: UUID, obClause: ClauseObjectInput): [Topic]

  """

  """
  dsSection: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  hasChild: Boolean!

  """

  """
  idParent: NullUUID

  """

  """
  idSection: UUID!

  """

  """
  nmSection: String!

  """

  """
  obSection: JSON

  """

  """
  stSection: RecordStatusEnum!
}

"""
Admin
"""
type Admin {
  """

  """
  dsEmail: EmailAddress!

  """

  """
  dsToken: String!

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idAdmin: UUID!

  """

  """
  nmAdmin: String!

  """

  """
  obAdmin: JSON

  """

  """
  stAdmin: RecordStatusEnum!
}

"""

"""
input DraftInput {
  """

  """
  idOption: UUID!
}

"""

"""
enum RecordStatusEnum {
  """

  """
  active

  """

  """
  inactive
}

"""
Client
"""
type Client {
  """

  """
  ClientOffices(idOffice: UUID, obClause: ClauseObjectInput): [Office]

  """

  """
  ClientProjects(idProject: UUID, obClause: ClauseObjectInput): [Project]

  """

  """
  dsClient: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  flKeyAccount: Boolean!

  """

  """
  idClient: UUID!

  """

  """
  nmClient: String!

  """

  """
  obClient: JSON!

  """

  """
  stClient: RecordStatusEnum!
}

"""

"""
enum OperatorTypeEnum {
  """

  """
  equal

  """

  """
  in

  """

  """
  not_equal

  """

  """
  not_like

  """

  """
  gt

  """

  """
  gte

  """

  """
  lt

  """

  """
  lte

  """

  """
  like

  """

  """
  not_in
}

"""

"""
enum SortTypeEnum {
  """

  """
  asc

  """

  """
  desc
}

"""
UUID is nullable
"""
scalar NullUUID

"""
Segment
"""
type Segment {
  """

  """
  SegmentTopics(idTopic: UUID, obClause: ClauseObjectInput): [Topic]

  """

  """
  dsSegment: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idSegment: UUID!

  """

  """
  nmSegment: String!

  """

  """
  obSegment: JSON

  """

  """
  stSegment: RecordStatusEnum!
}

"""

"""
input OptionInput {
  """

  """
  idOption: UUID

  """

  """
  dsLabel: String!

  """

  """
  dsOption: NullString = "{ false}"

  """

  """
  flComment: Boolean = false

  """

  """
  stOption: RecordStatusEnum
}

"""

"""
enum AggregateTypeEnum {
  """

  """
  min

  """

  """
  sum

  """

  """
  avg

  """

  """
  count

  """

  """
  max
}

"""

"""
input OfficeInput {
  """

  """
  dsEmail: EmailAddress!

  """

  """
  dsOffice: NullString

  """

  """
  nmOffice: String!

  """

  """
  nmContact: String!
}

"""
A valid email address
"""
scalar EmailAddress

"""
Report
"""
type Report {
  """

  """
  ReportAnswers(idAnswer: UUID, obClause: ClauseObjectInput): [Answer]

  """

  """
  cdReport: String!

  """

  """
  dsReport: NullString

  """

  """
  dtCreated: DateTime!

  """

  """
  dtExpiration: DateTime!

  """

  """
  dtUpdated: DateTime!

  """

  """
  idOffice: UUID!

  """

  """
  idProject: UUID!

  """

  """
  idQuiz: UUID!

  """

  """
  idReport: UUID!

  """

  """
  nmReport: String!

  """

  """
  obReport: JSON

  """

  """
  stReport: RecordStatusEnum!
}
